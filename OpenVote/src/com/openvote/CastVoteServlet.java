package com.openvote;


import java.io.IOException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.TimeZone;
import java.util.UUID;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import java.io.IOException;

import javax.servlet.http.*;

import org.datanucleus.store.query.CandidateIdsQueryResult;

import static com.googlecode.objectify.ObjectifyService.ofy;
 

//COPIED FROM OPENVOTESERVLET.java
/*
 * key = key.getkey()
 * 
 * */
@SuppressWarnings("serial")
public class CastVoteServlet extends HttpServlet {

	public void doGet(HttpServletRequest req, HttpServletResponse resp)
			throws IOException {
		
	}
	
    public void doPost(HttpServletRequest req, HttpServletResponse resp)
            throws IOException {
    	String candidate_str = req.getParameter("candidate");
    	Vote vote = new Vote(Candidate.valueOf(candidate_str).ordinal());
    	ofy().save().entity(vote).now(); 	
    	//TODO: verify that the autogenerated id is unique
    	
    	
//		req.setAttribute("voteKey", vote.id);
//		RequestDispatcher dispatcher = getServletContext().getRequestDispatcher("/displayVoteKeys.jsp");
//		try
//		{
//			dispatcher.forward(req, resp);
//		} catch (ServletException e)
//		{
//			e.printStackTrace();
//		}

    	
    	// cast vote for all fake candidates
    	// this needs to be moved later in the workflow; voter needs to specify how many batches of fake votes they'd like to send
		ArrayList<Long> fakeVoteKeys = new ArrayList<Long>();
		for (Candidate c: Candidate.values()) {
			Vote fakeVote = new Vote(c.ordinal());
    		ofy().save().entity(fakeVote).now();
    		fakeVoteKeys.add(fakeVote.id);
    	}
    	
    	//VoteKey vk = new VoteKey(UUID.randomUUID()); //TODO this needs to be checked for uniqueness
    	//Vote vote = new Vote(vk, Candidate.valueOf(candidate_str));
    	

		resp.setContentType("text/plain");
		resp.getWriter().println("You voted for " + candidate_str + ".");
		resp.getWriter().println("Your key is " + vote.id + ".");
		resp.getWriter().println("Here are some keys that correspond to other candidates: ");
		for (Long key : fakeVoteKeys) {
			resp.getWriter().println(key);
		}
		
		
		//if(votmg){
		 //   -get info
		  //  -cast votes
		   // -save keys in session data
		   // -all data you save to check against
		   // -redirect to display.jsp
		//}

		
    }

}
